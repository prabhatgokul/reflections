When would you want to use a remote repository rather than keeping all your work local?

	When you are collaborating in a team or working from multiple machines.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Because other people may be collaborating on your work so you would want to make sure that you pull at times that would be appropriate.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Forks are clones of an existing repository on GitHub that is cloned to your remote repository but not yet on your local machine. Clones are copies of a repository that can be made on your local machine or from your local machine to a remote. Branches are different 'lines' of commits within a single git.
	You would use forks when cloning another user's repository but do not have permission to contribute to their repository.
	You would then clone your remote repository to your local machine or clone the repository from your local machine to a remote.
	You would use branches when adding new features to your program.

What is the benefit of having a copy of the last known state of the remote stored locally?

	It will ensure that the local copy you are working on is up to date with other collaborators or your own work from different machines.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I would try to use dropbox. It would be easier not having to teach the other person how to use git and there may be less errors because git appears to be quite complicated. On the otherhand, it will get quite confusing using dropbox as we would have many files so would be reluctant to save new versions. I would probably just end up adding lots of comments in my code, hoping it would be sufficient.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	When there are changes that you are unsure the other collaborators would agree with as well. It saves a lot of trouble with having to go through the process of merging branches together.